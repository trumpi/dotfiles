# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Basic auto/tab complete:
compinit
_comp_options+=(globdots)

# Prepended path
[ -d /usr/local/go/bin ] && export PATH="/usr/local/go/bin:$PATH"
[ -d $HOME/tools ] && export PATH="$HOME/tools:$PATH"
[ -d /usr/local/opt/terraform@0.12/bin ] && export PATH="/usr/local/opt/terraform@0.12/bin:$PATH"
[ -d /usr/local/opt/helm@2/bin ] && export PATH="/usr/local/opt/helm@2/bin:$PATH"
[ -d $HOME/scripts ] && export PATH="$HOME/scripts:$PATH"
[ -d /usr/local/share/dotnet ] && export PATH="/usr/local/share/dotnet:$PATH"
[ -d /usr/local/bin ] && export PATH="/usr/local/bin:$PATH"

# Appended path
[ -d $GOPATH/bin ] && export PATH="$PATH:$GOPATH/bin"
[ -d $HOME/.dotnet/tools ] && export PATH="$PATH:$HOME/.dotnet/tools"
[ -d $HOME/repositories/useful-scripts ] && export PATH="$PATH:$HOME/repositories/useful-scripts"
[ -d $HOME/.local/bin ] && export PATH="$PATH:$HOME/.local/bin"

#
# Dependencies
#

[[ ! -d "$HOME/.antigen" ]] && git clone https://github.com/zsh-users/antigen.git "$HOME/.antigen"
source "$HOME/.antigen/antigen.zsh"

antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle nocttuam/autodotenv
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle zsh-users/zsh-completions
antigen bundle Aloxaf/fzf-tab
antigen bundle unixorn/fzf-zsh-plugin@main

antigen theme romkatv/powerlevel10k

antigen apply

# vi mode
bindkey -v
export KEYTIMEOUT=1

# Change cursor shape for different vi modes.
function zle-keymap-select () {
    case $KEYMAP in
        vicmd) echo -ne '\e[1 q';;      # block
        viins|main) echo -ne '\e[5 q';; # beam
    esac
}
zle -N zle-keymap-select
zle-line-init() {
    zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
    echo -ne "\e[5 q"
}
zle -N zle-line-init
echo -ne '\e[5 q' # Use beam shape cursor on startup.
preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.

# User configuration
{{- if eq .chezmoi.os "darwin" }}
batcmd=bat
{{- else }}
batcmd=batcat
{{- end }}

export EDITOR="nvim"
export GOPATH=$HOME/go
export MANPAGER="$batcmd --language manpage"
export PAGER=$batcmd
export BAT_PAGER="less -RF"

if [ -x "$(command -v nvim)" ]; then
  alias vim=nvim
fi

if [ -x "$(command -v git)" ]; then
  alias g=git
fi

if [ -x "$(command -v kubectl)" ]; then
  alias k=kubectl
  export KUBE_EDITOR=$EDITOR
fi

if [ -x "$(command -v bw)" ]; then
  alias unlock='export BW_SESSION=`bw unlock --raw`'
  alias lock='bw lock'
fi

if [ -x "$(command -v exa)" ]; then
  alias ls=exa
fi

{{- if eq .chezmoi.os "darwin" }}
if [ -x "$(command -v bat)" ]; then
  alias cat=bat
fi
{{- else }}
if [ -x "$(command -v batcat)" ]; then
  alias cat=batcat
fi
{{- end }}

if [ -x "$(command -v zoxide)" ]; then
  eval "$(zoxide init zsh)"
fi

alias update='source ~/.zshrc'
{{- if eq .chezmoi.os "darwin" }}
alias start=open
{{- else }}
alias start=xdg-open
{{- end }}

[ -f ~/todo/todo.sh ] && alias t=~/todo/todo.sh
{{- if hasSuffix "salesforce.com" .email }}
[ -f ~/todo/todo.sh ] && alias tedit=code ~/todo/work.txt
{{- else }}
[ -f ~/todo/todo.sh ] && alias tedit=code ~/todo/todo.txt
{{- end }}

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Completion for kitty
kitty + complete setup zsh | source /dev/stdin

source ~/.profile

enable-fzf-tab

# Open the Pull Request URL for your current directory's branch (base branch defaults to master)
function openpr() {
  remote=${1:-origin}
  github_url=`git remote -v | awk "/^${remote}.*\\(fetch\\)$/{print \\$2}" | sed -Ee 's#(git@|git://)#https://#' -e 's@com:@com/@' -e 's%\.git$%%'`;
  branch_name=`git symbolic-ref HEAD | cut -d"/" -f 3,4`;
  pr_url=$github_url"/compare/master..."$branch_name
  {{- if eq .chezmoi.os "darwin" }}
  open $pr_url;
  {{- else }}
  xdg-open $pr_url;
  {{- end }}
}

function pruneBranches() {
  git fetch -p && for branch in $(git branch -vv | grep ': gone]' | awk '{print $1}'); do git branch -D $branch; done
}
